create or replace procedure Load_Cache_Attribute(sessionId in number) is
    value_number number;
    value_str varchar2(2000);
    value_date date;
    value_geometry MDSYS.SDO_GEOMETRY;
    t_object_type_id int;
    t_object_value int;
    table_object_id int;
    t_object_name varchar2(100);
    t_owner_name varchar2(100);
    query varchar2(1000);
    primary_column_name varchar2(100);
    column_type varchar2(100);
    t_attribute_name varchar2(100);
    now date;
    t_attribute_type_id int;
    count_row int;
    cursor o is
    select cache_object.object_type_id, cache_object.object_value from cache_object where cache_object.session_id = sessionId;
    cursor types is
    select attribute_type.attribute_type_id, attribute_type.attribute_name, attribute_type.object_type_id from attribute_type;
    cursor col is
    select attribute_type.attribute_type_id, attribute_type.data_type, attribute_type.attribute_name from attribute_type where attribute_type.object_type_id = t_object_type_id;
begin
    -- ќткрываем курсор, который проходитс€ по всем типам атрибутов в info_attribute
    open types;
    loop
        fetch types into t_attribute_type_id, t_attribute_name, t_object_type_id;
        if (types%notfound) then
            exit;
        end if;
	-- ѕолучаем им€ владельца и им€ таблицы в которой находитс€ этот атрибут
	select object_type.object_name, owner.owner_name into t_object_name, t_owner_name from object_type
	inner join owner on owner.owner_id = object_type.owner_id
	where object_type.object_type_id = t_object_type_id;
	-- ¬ыполн€ем динамический запрос дл€ нахождени€ типа значени€ атрибута
        query := 'begin select data_type into :column_type from all_tab_columns where owner = ''' || upper(t_owner_name) || ''' and table_name = ''' || upper(t_object_name) || ''' and column_name = ''' || upper(t_attribute_name) || '''; end;';
        execute immediate query
        using out column_type;
	-- ”станавливаем данный тип в таблицу attribute_type
        update attribute_type set attribute_type.data_type = column_type where attribute_type.attribute_type_id = t_attribute_type_id;
        commit;
    end loop;
    -- ќткрываем курсор, который проходитс€ по всем объектам
    open o;
    loop
        fetch o into t_object_type_id, t_object_value;
        if (o%notfound) then
            exit;
        end if;
	-- ѕолучаем им€ владельца и им€ таблицы, в которой находитс€ объект
	select owner.owner_name, object_type.object_name into t_owner_name, t_object_name from object_type
	inner join owner on owner.owner_id = object_type.owner_id
	where object_type.object_type_id = t_object_type_id;
	-- ¬ыполн€ем динамический запрос, дл€ поиска названи€ столбца, который €вл€етс€ первичным ключом
	query := 'begin select acc.column_name into :primary_column_name from all_constraints ac ' ||
	'inner join all_cons_columns acc on ac.constraint_name = acc.constraint_name ' || 
	'where ac.table_name = :table_name and ac.constraint_type = ''' || 'P''' || ';end;';
	execute immediate query
	using out primary_column_name, in t_object_name;
	-- открываем курсор, который проходитс€ по всем типам атрибута
        open col;
        loop
            fetch col into t_attribute_type_id, column_type, t_attribute_name;
            if (col%notfound) then
                exit;
            end if;
	    -- выполн€ем динамический запрос, дл€ получение значени€ атрибута
            query := 'begin select ' || t_attribute_name || ' into :value from ' || t_owner_name || '.' ||
            t_object_name || ' where ' || primary_column_name || '= :t_object_value' || '; end;';
            -- взависимости от типа устанавливаем в определенную переменную
            if (lower(column_type) = 'number') then
                execute immediate query
                using out value_number, in t_object_value;
            end if;
            if (lower(column_type) = 'varchar2') then
                execute immediate query
                using out value_str, in t_object_value;
            end if;
            if (lower(column_type) = 'date') then
                execute immediate query
                using out value_date, in t_object_value;
            end if;
	    if (lower(column_type) = 'sdo_geometry') then
                execute immediate query
                using out value_geometry, in t_object_value;
            end if;
	    -- записываем новый кортеж в таблицу info_cache
            if (lower(column_type) = 'number') then
                insert into cache_attribute(session_id, attribute_id, object_value, number_val) values(sessionId, t_attribute_type_id, t_object_value, value_number);
            elsif (lower(column_type) = 'varchar2') then
                insert into cache_attribute(session_id, attribute_id, object_value, str_val) values(sessionId, t_attribute_type_id, t_object_value, value_str);
            elsif (lower(column_type) = 'date') then
                insert into cache_attribute(session_id, attribute_id, object_value, date_val) values(sessionId, t_attribute_type_id, t_object_value, value_date);
	    elsif (lower(column_type) = 'sdo_geometry') then
                insert into cache_attribute(session_id, attribute_id, object_value, geometry_val) values(sessionId, t_attribute_type_id, t_object_value, value_geometry);
            end if;
        end loop;
        close col;
    end loop;
    close o;
    commit;
end;